import random

q = 17
alpha = 14
Xa=3
Xb=4
def modulus(a, p, b):
    bi = [i for i in bin(p)[2:]]
    pows = [a]
    for i in range(len(bi)-1):
        pows.append(pows[i]**2%b)
    pows.reverse()
    p=1
    for i, j in zip(bi, pows):
        p*=j**int(i)
    return p%b

class Alice:
    def alice1(self):
        global q, alpha
        Ya = modulus(alpha, Xa, q)
        return Ya
    def alice2(self, Yb):
        global q
        K = modulus(Yb,  Xa, q)
        return  K

class Bob:
    def bob1(self):
        global q, alpha
        Ya = modulus(alpha,Xb, q)
        return Ya
    def bob2(self, Ya):
        global q
        K = modulus(Ya,Xb, q)
        return  K    
a = Alice()
b = Bob()
Ya = a.alice1()
Yb = b.bob1()
print("Key generated by Alice : ", a.alice2(Yb))
print("Key generated by Bob : ", b.bob2(Ya))